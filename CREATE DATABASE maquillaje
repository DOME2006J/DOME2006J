USE maquillaje;
 
CREATE TABLE PRODUCTO (
    id_producto INT AUTO_INCREMENT PRIMARY KEY,
    descripcion VARCHAR(255) NOT NULL,
    precio DECIMAL(10, 2) NOT NULL,
    stock INT NOT NULL
);
 
-- Insertar productos de ejemplo
INSERT INTO PRODUCTO (descripcion, precio, stock) VALUES
('Base líquida', 15.99, 50),
('Paleta de sombras', 25.50, 30),
('Labial mate', 9.99, 100),
('Rímel', 12.75, 40),
('Delineador', 7.50, 60); 
 
Main: from data import AppMaquillaje
 
def menu_principal():
    print("\033[95m-------------------------------\033[0m")
    print("\033[95m      MENÚ PRINCIPAL\033[0m")
    print("\033[95m-------------------------------\033[0m")
    print("1. Registrar Producto")
    print("2. Mostrar Productos")
    print("3. Salir")
 
def main():
    app = AppMaquillaje()
 
    while True:
        menu_principal()
        opcion = input("\033[95mSeleccione una opción: \033[0m")
 
        if opcion == '1':
            app.registrarProducto()
        elif opcion == '2':
            app.mostrarProductos()
        elif opcion == '3':
            app.cerrarConexion()
            print("\033[95mGracias por usar la app de gestión de maquillaje.\033[0m")
            break
        else:
            print("\033[91m❌ Opción no válida, intente de nuevo.\033[0m")
 
if __name__ == "__main__":
    main()

from data import AppMaquillaje
 
def menu_principal():
    print("\033[95m-------------------------------\033[0m")
    print("\033[95m      MENÚ PRINCIPAL\033[0m")
    print("\033[95m-------------------------------\033[0m")
    print("1. Registrar Producto")
    print("2. Mostrar Productos")
    print("3. Salir")
 
def main():
    app = AppMaquillaje()
 
    while True:
        menu_principal()
        opcion = input("\033[95mSeleccione una opción: \033[0m")
 
        if opcion == '1':
            app.registrarProducto()
        elif opcion == '2':
            app.mostrarProductos()
        elif opcion == '3':
            app.cerrarConexion()
            print("\033[95mGracias por usar la app de gestión de maquillaje.\033[0m")
            break
        else:
            print("\033[91m❌ Opción no válida, intente de nuevo.\033[0m")
 
if __name__ == "__main__":
    main()
 
import mysql.connector
from mysql.connector import Error
 
class AppMaquillaje:
    def __init__(self):
        self.conectarBD()
 
    def conectarBD(self):
        try:
            self.conn = mysql.connector.connect(
                host='localhost',
                database='maquillaje',
                user='root',
                password=''
            )
            if self.conn.is_connected():
                self.cursor = self.conn.cursor()
                print("\033[95m✔ Conexión exitosa a la base de datos.\033[0m")
        except Error as e:
            print(f"\033[91m❌ Error de MySQL: {e}\033[0m")
 
    def cerrarConexion(self):
        if self.conn.is_connected():
            self.cursor.close()
            self.conn.close()
            print("\033[95m✔ Conexión a la base de datos cerrada.\033[0m")
 
    def registrarProducto(self):
        try:
            descripcion = input("\033[95mIngrese la descripción del producto: \033[0m")
            precio = float(input("\033[95mIngrese el precio del producto: \033[0m"))
            stock = int(input("\033[95mIngrese la cantidad en stock: \033[0m"))
 
            query = """
                INSERT INTO PRODUCTO (descripcion, precio, stock)
                VALUES (%s, %s, %s)
            """
            self.cursor.execute(query, (descripcion, precio, stock))
            self.conn.commit()
            print("\033[95m✔ Producto registrado exitosamente.\033[0m")
        except Error as e:
            print(f"\033[91m❌ Error de MySQL: {e}\033[0m")
 
    def mostrarProductos(self):
        try:
            self.cursor.execute("SELECT * FROM PRODUCTO")
            productos = self.cursor.fetchall()
            for producto in productos:
                print(f"\033[95mID Producto: {producto[0]}, Descripción: {producto[1]}, Precio: {producto[2]}, Stock: {producto[3]}\033[0m")
        except Error as e:
            print(f"\033[91m❌ Error de MySQL: {e}\033[0m")
 
